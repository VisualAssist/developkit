<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>CMake文件模板</Title>
      <Author>Ant</Author>
      <Description>Source file template.</Description>
      <HelpUrl>http://www.ant.sh</HelpUrl>
      <Shortcut>SFT</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>HEADER_FILE</ID>
          <ToolTip>HEADER_FILE</ToolTip>
          <Default>HEADER_FILE</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="txt" Delimiter="$"><![CDATA[##
##
## Copyright (c) 2019. The Authors of ANT(http://ant.sh) All Rights Reserved.
##

# Most widely used distributions have cmake 3.5 or greater available as of March 2019.
cmake_minimum_required(VERSION 3.5)

# Compiler id for Apple Clang is now AppleClang.
cmake_policy(SET CMP0025 NEW)

# if command can use IN_LIST
cmake_policy(SET CMP0057 NEW)

# Project version variables are the empty std::string if version is unspecified
cmake_policy(SET CMP0048 NEW)

project($PROJECT_NAME$ CXX)

# when $PROJECT_NAME$ is included as subproject
# in the source tree of a project that use it, install rules are disabled.
if(NOT "^${CMAKE_SOURCE_DIR}$" STREQUAL "^${PROJECT_SOURCE_DIR}$")
  set(CMAKE_ENABLE_INSTALL FALSE)
else()
  set(CMAKE_ENABLE_INSTALL TRUE)
endif()

list(APPEND CMAKE_MODULE_PATH
  ${CMAKE_CURRENT_LIST_DIR}/CMake
)

include(CMakeInstallDirs)
include(CMakePackageConfigHelpers)
include(CMakeHelpers)

# include current path
list(APPEND CMAKE_COMMON_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR})

if("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
  set(CMAKE_USING_CLANG ON)
else()
  set(CMAKE_USING_CLANG OFF)
endif()

# find dependencies
## pthread
find_package(Threads REQUIRED)

option(CMAKE_USE_GOOGLETEST_HEAD
  "If ON, this project will download HEAD from googletest at config time." OFF)

option(CMAKE_RUN_TESTS "If ON, project tests will be run." OFF)

if(${CMAKE_RUN_TESTS})
  # enable CTest.  This will set BUILD_TESTING to ON unless otherwise specified
  # on the command line
  include(CTest)
  enable_testing()
endif()

## check targets
if(BUILD_TESTING)

  if(${CMAKE_USE_GOOGLETEST_HEAD})
    include(CMake/Googletest/DownloadGTest.cmake)
    set(cmake_gtest_src_dir ${CMAKE_BINARY_DIR}/googletest-src)
    set(cmake_gtest_build_dir ${CMAKE_BINARY_DIR}/googletest-build)
  endif()

  check_target(gtest)
  check_target(gtest_main)
  check_target(gmock)

  list(APPEND CMAKE_TEST_COMMON_LIBRARIES
    gtest_main
    gtest
    gmock
    ${CMAKE_THREAD_LIBS_INIT}
  )
endif()

add_subdirectory($SOURCE_DIR$)

if(CMAKE_ENABLE_INSTALL)
  list(APPEND SYSTEM_INSTALL_DIRS "/usr/local" "/usr" "/opt/" "/opt/local" "c:/Program Files/${PROJECT_NAME}")
  if(NOT DEFINED CMAKE_INSTALL_PREFIX OR CMAKE_INSTALL_PREFIX IN_LIST SYSTEM_INSTALL_DIRS)
    message(WARNING "\
  The default and system-level install directories are unsupported except in LTS \
  releases.  Please set CMAKE_INSTALL_PREFIX to install Basic in your \
  source or build tree directly.\
    ")
  endif()
  # $PROJECT_NAME$:lts-remove-end

  # install as a subdirectory only
  install(EXPORT ${PROJECT_NAME}Targets
    NAMESPACE basic::
    DESTINATION "${CMAKE_INSTALL_CONFIGDIR}"
  )

  configure_package_config_file(
    CMake/basicConfig.cmake.in
    "${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
    INSTALL_DESTINATION "${CMAKE_INSTALL_CONFIGDIR}"
  )
  install(FILES "${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
    DESTINATION "${CMAKE_INSTALL_CONFIGDIR}"
  )

  if($PROJECT_NAME$_VERSION)
    write_basic_package_version_file(
      "${PROJECT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
      COMPATIBILITY ExactVersion
    )

    install(FILES "${PROJECT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
      DESTINATION ${CMAKE_INSTALL_CONFIGDIR}
    )
  endif()  # $PROJECT_NAME$_VERSION

  install(DIRECTORY basic
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
    FILES_MATCHING
      PATTERN "*.inc"
      PATTERN "*.h"
  )
endif()  # CMAKE_ENABLE_INSTALL

]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>